commit cd4c6e2decdded24262f34bff0af8d4fc0b56166
Author: benqi <wubenqi@gmail.com>
Date:   Sat Dec 18 19:55:31 2021 +0800

    patch - connect to teamgram server

diff --git a/Telegram/SourceFiles/mtproto/config_loader.cpp b/Telegram/SourceFiles/mtproto/config_loader.cpp
index 3529dd33e..4aacc067a 100644
--- a/Telegram/SourceFiles/mtproto/config_loader.cpp
+++ b/Telegram/SourceFiles/mtproto/config_loader.cpp
@@ -136,18 +136,18 @@ void ConfigLoader::setPhone(const QString &phone) {
 }
 
 void ConfigLoader::createSpecialLoader() {
-	_triedSpecialEndpoints.clear();
-	_specialLoader = std::make_unique<SpecialConfigRequest>([=](
-			DcId dcId,
-			const std::string &ip,
-			int port,
-			bytes::const_span secret) {
-		if (ip.empty()) {
-			_specialLoader = nullptr;
-		} else {
-			addSpecialEndpoint(dcId, ip, port, secret);
-		}
-	}, _instance->configValues().txtDomainString, _phone);
+    //	_triedSpecialEndpoints.clear();
+    //	_specialLoader = std::make_unique<SpecialConfigRequest>([=](
+    //			DcId dcId,
+    //			const std::string &ip,
+    //			int port,
+    //			bytes::const_span secret) {
+    //		if (ip.empty()) {
+    //			_specialLoader = nullptr;
+    //		} else {
+    //			addSpecialEndpoint(dcId, ip, port, secret);
+    //		}
+    //	}, _instance->configValues().txtDomainString, _phone);
 }
 
 void ConfigLoader::addSpecialEndpoint(
diff --git a/Telegram/SourceFiles/mtproto/mtp_instance.h b/Telegram/SourceFiles/mtproto/mtp_instance.h
index 2a3bc3d4e..00b952bf0 100644
--- a/Telegram/SourceFiles/mtproto/mtp_instance.h
+++ b/Telegram/SourceFiles/mtproto/mtp_instance.h
@@ -40,7 +40,7 @@ public:
 
 		static constexpr auto kNoneMainDc = -1;
 		static constexpr auto kNotSetMainDc = 0;
-		static constexpr auto kDefaultMainDc = 2;
+		static constexpr auto kDefaultMainDc = 1;
 		static constexpr auto kTemporaryMainDc = 1000;
 
 		std::unique_ptr<Config> config;
diff --git a/Telegram/SourceFiles/mtproto/mtproto_dc_options.cpp b/Telegram/SourceFiles/mtproto/mtproto_dc_options.cpp
index b6ef68f9b..fc2325550 100644
--- a/Telegram/SourceFiles/mtproto/mtproto_dc_options.cpp
+++ b/Telegram/SourceFiles/mtproto/mtproto_dc_options.cpp
@@ -29,52 +29,78 @@ struct BuiltInDc {
 };
 
 const BuiltInDc kBuiltInDcs[] = {
-	{ 1, "149.154.175.50" , 443 },
-	{ 2, "149.154.167.51" , 443 },
-	{ 2, "95.161.76.100"  , 443 },
-	{ 3, "149.154.175.100", 443 },
-	{ 4, "149.154.167.91" , 443 },
-	{ 5, "149.154.171.5"  , 443 },
+    { 1, "47.103.102.219" , 10443 },
+    // { 1, "192.168.1.150" , 10443 },
+	// { 1, "149.154.175.50" , 443 },
+	// { 2, "149.154.167.51" , 443 },
+	// { 2, "95.161.76.100"  , 443 },
+	// { 3, "149.154.175.100", 443 },
+	// { 4, "149.154.167.91" , 443 },
+	// { 5, "149.154.171.5"  , 443 },
 };
 
-const BuiltInDc kBuiltInDcsIPv6[] = {
-	{ 1, "2001:0b28:f23d:f001:0000:0000:0000:000a", 443 },
-	{ 2, "2001:067c:04e8:f002:0000:0000:0000:000a", 443 },
-	{ 3, "2001:0b28:f23d:f003:0000:0000:0000:000a", 443 },
-	{ 4, "2001:067c:04e8:f004:0000:0000:0000:000a", 443 },
-	{ 5, "2001:0b28:f23f:f005:0000:0000:0000:000a", 443 },
-};
+//const BuiltInDc kBuiltInDcsIPv6[] = {
+//	{ 1, "2001:0b28:f23d:f001:0000:0000:0000:000a", 443 },
+//	{ 2, "2001:067c:04e8:f002:0000:0000:0000:000a", 443 },
+//	{ 3, "2001:0b28:f23d:f003:0000:0000:0000:000a", 443 },
+//	{ 4, "2001:067c:04e8:f004:0000:0000:0000:000a", 443 },
+//	{ 5, "2001:0b28:f23f:f005:0000:0000:0000:000a", 443 },
+//};
 
 const BuiltInDc kBuiltInDcsTest[] = {
-	{ 1, "149.154.175.10" , 443 },
-	{ 2, "149.154.167.40" , 443 },
-	{ 3, "149.154.175.117", 443 }
+    { 1, "47.103.102.219" , 10443 },
+    // { 1, "192.168.1.150" , 10443 },
+	// { 1, "149.154.175.10" , 443 },
+	// { 2, "149.154.167.40" , 443 },
+	// { 3, "149.154.175.117", 443 }
 };
 
-const BuiltInDc kBuiltInDcsIPv6Test[] = {
-	{ 1, "2001:0b28:f23d:f001:0000:0000:0000:000e", 443 },
-	{ 2, "2001:067c:04e8:f002:0000:0000:0000:000e", 443 },
-	{ 3, "2001:0b28:f23d:f003:0000:0000:0000:000e", 443 }
-};
+//const BuiltInDc kBuiltInDcsIPv6Test[] = {
+//	{ 1, "2001:0b28:f23d:f001:0000:0000:0000:000e", 443 },
+//	{ 2, "2001:067c:04e8:f002:0000:0000:0000:000e", 443 },
+//	{ 3, "2001:0b28:f23d:f003:0000:0000:0000:000e", 443 }
+//};
+
+//const char *kTestPublicRSAKeys[] = { "\
+//-----BEGIN RSA PUBLIC KEY-----\n\
+//MIIBCgKCAQEAyMEdY1aR+sCR3ZSJrtztKTKqigvO/vBfqACJLZtS7QMgCGXJ6XIR\n\
+//yy7mx66W0/sOFa7/1mAZtEoIokDP3ShoqF4fVNb6XeqgQfaUHd8wJpDWHcR2OFwv\n\
+//plUUI1PLTktZ9uW2WE23b+ixNwJjJGwBDJPQEQFBE+vfmH0JP503wr5INS1poWg/\n\
+//j25sIWeYPHYeOrFp/eXaqhISP6G+q2IeTaWTXpwZj4LzXq5YOpk4bYEQ6mvRq7D1\n\
+//aHWfYmlEGepfaYR8Q0YqvvhYtMte3ITnuSJs171+GDqpdKcSwHnd6FudwGO4pcCO\n\
+//j4WcDuXc2CTHgH8gFTNhp/Y8/SpDOhvn9QIDAQAB\n\
+//-----END RSA PUBLIC KEY-----" };
+//
+//const char *kPublicRSAKeys[] = { "\
+//-----BEGIN RSA PUBLIC KEY-----\n\
+//MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\n\
+//5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\n\
+//62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\n\
+//+aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\n\
+//t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\n\
+//5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\n\
+//-----END RSA PUBLIC KEY-----" };
+//
+//} // namespace
 
 const char *kTestPublicRSAKeys[] = { "\
 -----BEGIN RSA PUBLIC KEY-----\n\
-MIIBCgKCAQEAyMEdY1aR+sCR3ZSJrtztKTKqigvO/vBfqACJLZtS7QMgCGXJ6XIR\n\
-yy7mx66W0/sOFa7/1mAZtEoIokDP3ShoqF4fVNb6XeqgQfaUHd8wJpDWHcR2OFwv\n\
-plUUI1PLTktZ9uW2WE23b+ixNwJjJGwBDJPQEQFBE+vfmH0JP503wr5INS1poWg/\n\
-j25sIWeYPHYeOrFp/eXaqhISP6G+q2IeTaWTXpwZj4LzXq5YOpk4bYEQ6mvRq7D1\n\
-aHWfYmlEGepfaYR8Q0YqvvhYtMte3ITnuSJs171+GDqpdKcSwHnd6FudwGO4pcCO\n\
-j4WcDuXc2CTHgH8gFTNhp/Y8/SpDOhvn9QIDAQAB\n\
+MIIBCgKCAQEAvKLEOWTzt9Hn3/9Kdp/RdHcEhzmd8xXeLSpHIIzaXTLJDw8BhJy1\n\
+jR/iqeG8Je5yrtVabqMSkA6ltIpgylH///FojMsX1BHu4EPYOXQgB0qOi6kr08iX\n\
+ZIH9/iOPQOWDsL+Lt8gDG0xBy+sPe/2ZHdzKMjX6O9B4sOsxjFrk5qDoWDrioJor\n\
+AJ7eFAfPpOBf2w73ohXudSrJE0lbQ8pCWNpMY8cB9i8r+WBitcvouLDAvmtnTX7a\n\
+khoDzmKgpJBYliAY4qA73v7u5UIepE8QgV0jCOhxJCPubP8dg+/PlLLVKyxU5Cdi\n\
+QtZj2EMy4s9xlNKzX8XezE0MHEa6bQpnFwIDAQAB\n\
 -----END RSA PUBLIC KEY-----" };
 
 const char *kPublicRSAKeys[] = { "\
 -----BEGIN RSA PUBLIC KEY-----\n\
-MIIBCgKCAQEA6LszBcC1LGzyr992NzE0ieY+BSaOW622Aa9Bd4ZHLl+TuFQ4lo4g\n\
-5nKaMBwK/BIb9xUfg0Q29/2mgIR6Zr9krM7HjuIcCzFvDtr+L0GQjae9H0pRB2OO\n\
-62cECs5HKhT5DZ98K33vmWiLowc621dQuwKWSQKjWf50XYFw42h21P2KXUGyp2y/\n\
-+aEyZ+uVgLLQbRA1dEjSDZ2iGRy12Mk5gpYc397aYp438fsJoHIgJ2lgMv5h7WY9\n\
-t6N/byY9Nw9p21Og3AoXSL2q/2IJ1WRUhebgAdGVMlV1fkuOQoEzR7EdpqtQD9Cs\n\
-5+bfo3Nhmcyvk5ftB0WkJ9z6bNZ7yxrP8wIDAQAB\n\
+MIIBCgKCAQEAvKLEOWTzt9Hn3/9Kdp/RdHcEhzmd8xXeLSpHIIzaXTLJDw8BhJy1\n\
+jR/iqeG8Je5yrtVabqMSkA6ltIpgylH///FojMsX1BHu4EPYOXQgB0qOi6kr08iX\n\
+ZIH9/iOPQOWDsL+Lt8gDG0xBy+sPe/2ZHdzKMjX6O9B4sOsxjFrk5qDoWDrioJor\n\
+AJ7eFAfPpOBf2w73ohXudSrJE0lbQ8pCWNpMY8cB9i8r+WBitcvouLDAvmtnTX7a\n\
+khoDzmKgpJBYliAY4qA73v7u5UIepE8QgV0jCOhxJCPubP8dg+/PlLLVKyxU5Cdi\n\
+QtZj2EMy4s9xlNKzX8XezE0MHEa6bQpnFwIDAQAB\n\
 -----END RSA PUBLIC KEY-----" };
 
 } // namespace
@@ -181,18 +207,18 @@ void DcOptions::constructFromBuiltIn() {
 			).arg(entry.port));
 	}
 
-	const auto listv6 = isTestMode()
-		? gsl::make_span(kBuiltInDcsIPv6Test)
-		: gsl::make_span(kBuiltInDcsIPv6).subspan(0);
-	for (const auto &entry : listv6) {
-		const auto flags = Flag::f_static | Flag::f_ipv6;
-		applyOneGuarded(entry.id, flags, entry.ip, entry.port, {});
-		DEBUG_LOG(("MTP Info: adding built in DC %1 IPv6 connect option: "
-			"%2:%3"
-			).arg(entry.id
-			).arg(entry.ip
-			).arg(entry.port));
-	}
+	// const auto listv6 = isTestMode()
+	// 	? gsl::make_span(kBuiltInDcsIPv6Test)
+	// 	: gsl::make_span(kBuiltInDcsIPv6).subspan(0);
+	// for (const auto &entry : listv6) {
+	// 	const auto flags = Flag::f_static | Flag::f_ipv6;
+	//	applyOneGuarded(entry.id, flags, entry.ip, entry.port, {});
+	//	DEBUG_LOG(("MTP Info: adding built in DC %1 IPv6 connect option: "
+	//		"%2:%3"
+	//		).arg(entry.id
+	//		).arg(entry.ip
+	//		).arg(entry.port));
+	//}
 }
 
 void DcOptions::processFromList(
